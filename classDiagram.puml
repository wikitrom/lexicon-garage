@startuml

' settings
' --------------------------------------------
skinparam classAttributeIconSize 0

title LexiconGarage - Class Diagram (WORK ONGOING)

' define packages/namespaces and/or classes
' --------------------------------------------

namespace se.lexicon.em.utilities {
enum VehicleType {
  UNKNOWN
  CAR
  BUS
  MOTORCYCLE
  BOAT
  AIRPLANE
}

enum ParkingStatusType {
  UNKNOWN
  PARKED
  NOT_PARKED
  }

}
' --- end namespace/package

namespace se.lexicon.em.ui {
class Main {
  +main() : void
}
class UI {
  -garage : Garage

  -buildNewGarage() : void
  -parkNewVehicle() : void
  -unparkVehicle() : void
  -listParkedVehicles() : void
  -listParkedVehicleTypes() : void
  -listRegisteredVehicles() : void
  -findVehicle() : void
  +init() : void  (control loop)
}

}
' --- end namespace/package

namespace se.lexicon.em.exceptions {
class GarageFullException
class VehicleNotFoundException
}
' --- end namespace/package

namespace se.lexicon.em.model {

' -- Classes
class Garage {
  -location : String
  -maxNoOfParkedVehicles : int
  -noOfRegisteredVehicles : int
  -currentNoOfParkedVehicles : int
  -vehicles : collection Vehicle

  '+listParkedVehicles() : void ???
  '+listParkedVehicleTypes() : void ???
  '+listKnownVehicles() : void  ???
  +addVehicle(Vehicle) : void
  +unparkVehicle(RegNumber) : boolean
  +findVehicle(regNumber) : Vehicle
  +isGarageFull() : boolean
  +canTackeMoreCustomers() : boolean
  +setParkingStatus(status, RegNumber) : void ???
  +setParkingStatus(aVehicle,  status) : void

}

abstract class Vehicle {
  -regNumber : int
  -type : VehicleType
  -model : String
  -status : ParkingStatusType

  {abstract} +toString() : String (abstract method)
  +getRegNumber() : String
  +getType() : VehicleType
  +getModel() : String

}

class Car {
  -numberOfSeats : int

  +toString() : String
  +getNumberOfSeats() : int
}

class Bus {
  -numberofPassengers : int

  +toString() : String
  +getNumberOfPassengers() : int
}

class Motorcycle {
  -cylinderVolume : int

  +toString() : String
  +getCylinderVolume() : int
}

class Boat {
  -weight : int

  +toString() : String
  +getWeight() : int
}

class Airplane {
 -numberOfPilots : int

  +toString() : String
  +getNumberOfPilots()
}
note "Defined but\nnot used." as N1
N1 .. Airplane

' -- Relations

Vehicle <|-- Car
Vehicle <|-- Bus
Vehicle <|-- Motorcycle
Vehicle <|-- Boat
Vehicle <|.. Airplane

Garage o-- Vehicle

}
' --- end namespace/package


' define relations between packages/namespaces
' --------------------------------------------

se.lexicon.em.model.Garage <-down- se.lexicon.em.ui.UI  : park/unpark vehicle\nfind/list vehicles
se.lexicon.em.model.Vehicle <-down- se.lexicon.em.ui.UI : create vehicle\nset/get vehicle data
' se.lexicon.em.utilities -- se.lexicon.em.model.Vehicle
' se.lexicon.em.exceptions -up- se.lexicon.em.model

@enduml
